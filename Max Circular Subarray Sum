Given an array arr[] of N integers arranged in a circular fashion. Your task is to find the maximum contiguous subarray sum.


Example 1:

Input:
N = 7
arr[] = {8,-8,9,-9,10,-11,12}
Output:
22
Explanation:
Starting from the last element
of the array, i.e, 12, and 
moving in a circular fashion, we 
have max subarray as 12, 8, -8, 9, 
-9, 10, which gives maximum sum 
as 22.
Example 2:

Input:
N = 8
arr[] = {10,-3,-4,7,6,5,-4,-1}
Output:
23
Explanation: Sum of the circular 
subarray with maximum sum is 23

Your Task:
The task is to complete the function circularSubarraySum() which returns a sum of the circular subarray with maximum sum.


Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).


Constraints:
1 <= N <= 10^6
-106 <= Arr[i] <= 10^6

// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


class Solution{
    public:
    // arr: input array
    // num: size of array
    //Function to find maximum circular subarray sum.
    int circularSubarraySum(int arr[], int num){
        
        if(num==1)
        return arr[0];
        int curr=arr[0];
        int best=arr[0];
        int sum=0;
        for(int i=1;i<num;i++)
        {
            
            curr=curr+arr[i];
            curr=max(curr,arr[i]);
           best=max(curr,best);
            
        }
        
        if(best<0)
        return best;
        int ans1=best;
        for(int i=0;i<num;i++)
        {
            sum=sum+arr[i];
            arr[i]=arr[i]*(-1);
        }
        
          int curr1=arr[0];
        int best1=arr[0];
        for(int i=1;i<num;i++)
        {
            curr1=curr1+arr[i];
            curr1=max(curr1,arr[i]);
           best1=max(curr1,best1);
            
        }
        
       return max(ans1,sum+best1); 
        
    }
};

// { Driver Code Starts.

int main()
 {
	int T;
	
	//testcases
	cin>> T;
	
	while (T--)
	{
	    int num;
	    
	    //size of array
	    cin>>num;
	    int arr[num];
	    
	    //inserting elements
	    for(int i = 0; i<num; i++)
	        cin>>arr[i];
	        
	    Solution ob;
	    //calling function
	    cout << ob.circularSubarraySum(arr, num) << endl;
	    
	}
	
	return 0;
}  // } Driver Code Ends
