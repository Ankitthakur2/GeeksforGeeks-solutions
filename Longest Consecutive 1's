Given a number N. The task is to find the length of the longest consecutive 1s in its binary representation.

Example 1:

Input: N = 14
Output: 3
Explanation: Binary representation of 14 is 
1110, in which 111 is the longest consecutive 
set bits of length is 3.
Example 2:

Input: N = 222
Output: 4
Explanation: Binary representation of 222 is 
11011110, in which 1111 is the longest 
consecutive set bits of length 4. 

Your Task: The task is to complete the function maxConsecutiveOnes() which returns the length of the longest consecutive 1s in the binary representation of given N.

Expected Time Complexity: O(log N).
Expected Auxiliary Space: O(1).

Constraints:
1 <= N <= 106
// { Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


//User function Template for C++

/*  Function to calculate the largest consecutive ones
*   x: given input to calculate the largest consecutive ones
*/
int maxConsecutiveOnes(int x)
{
 
    int count=0,maxi=0;
    
    while(x>0)
    {
        if((x&1)!=0)
        {
            count++;
        }
        else
        {
          count=0;
        }
      maxi=max(maxi,count);
       x=x>>1;
        
        }
    return maxi;
    
}



// { Driver Code Starts.

// Driver Code
int main() {
	int t;
	cin>>t;//testcases
	while(t--)
	{
		int n;
		cin>>n;//input n
		
		//calling maxConsecutiveOnes() function
		cout<<maxConsecutiveOnes(n)<<endl;
	}
	return 0;
}  // } Driver Code Ends
