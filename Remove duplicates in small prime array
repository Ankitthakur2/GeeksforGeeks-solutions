Given an array consisting of only prime numbers, remove all duplicate numbers from it. 
Note: Retain the first occurrence of the duplicate element.

Example 1:

Input:
N = 6
A[] = {2,2,3,3,7,5}
Output: 2 3 7 5
Explanation: After removing the duplicate
2 and 3 we get 2 3 7 5.
Your Task:
Complete the function removeDuplicate() that takes given array and N as input parameters and returns modified array which has no duplicates.

Note: In case of cpp the return type is vector<int>

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).

Constraints:
1<=N=1000
2<=A[i]<100
// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;
vector<int> removeDuplicate(vector<int>& arr, int n);

int main()
{
    int T;
    cin>>T;
    while(T--)
    {
        int N;
        cin>>N;
        vector<int> A(N);
        for(int i=0;i<N;i++)
        {
            cin>>A[i];
        }

        vector<int>result = removeDuplicate(A,N);
        for(int i =0;i<result.size();i++)
            cout<<result[i]<<" ";
        cout<<endl;

    }
}
// } Driver Code Ends


vector<int> removeDuplicate(vector<int>& arr, int n)
{
    vector<int> v;
    map<int,int> m;
    for(int i=0;i<n;i++)
    {
        if(m[arr[i]]!=1)
        {
            v.push_back(arr[i]);
        
            m[arr[i]]=1;
        }
       
    }

    arr=v;
    v.clear();
    m.clear();
    return arr;
}


