Given an array which contains all elements occurring k times, but one occurs only once. Find that unique element.

Input:
The first line consists of an integer T i.e number of test cases. The first line of each test case consists of two integers n and k. The next line consists of n spaced integers. 

Output:
Print the required output.

Constraints: 
1<=T<=100
2<=k 1<=a[i]<=10000

Example:
Input:
2
7 3
6 2 5 2 2 6 6 
5 4
2 2 2 10 2

Output:
5
10


#include<bits/stdc++.h>
using namespace std;
int main()
 {
	int t;
	cin>>t;
	while(t--)
	{
	    int n,k;
	    cin>>n>>k;
	    int x;
	    map<int,int> m;
	    
	    for(int i=0;i<n;i++)
	{
	    cin>>x;
	   if(m[x]>=1)
	   {
	       m[x]=m[x]+1;
	   }
	   else
	   {
	       m[x]=1;
	   }
	   
	}
	  
	  for(auto i=m.begin();i!=m.end();i++)
	  {
	      if(i->second==1)
	      {
	      cout<<i->first<<endl;
	       break;
	          
	      }
	  }
	  
	    
	}
	return 0;
}
