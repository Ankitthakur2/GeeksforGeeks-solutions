Given two sorted arrays of distinct elements. There is only 1 difference between the arrays. First array has one element extra added in between. Find the index of the extra element.

Example 1:

Input:
N = 7
A[] = {2,4,6,8,9,10,12}
B[] = {2,4,6,8,10,12}
Output: 4
Explanation: In the second array, 9 is
missing and it's index in the first array
is 4.
Example 2:

Input:
N = 6
A[] = {3,5,7,9,11,13}
B[] = {3,5,7,11,13}
Output: 3
Your Task:
You don't have to take any input. Just complete the provided function findExtra() that takes array A[], B[] and size of A[] and return the valid index (0 based indexing).

Expected Time Complexity: O(log N).
Expected Auxiliary Space: O(1).

Constraints:
2<=N<=10^4
1<=Ai<=10^5


// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends

class Solution{
  public:
   
   int binary(int a[],int x,int n)
   {
       int left=0;
       int right=n-1;
       while(left<=right)
       {
           int mid=left+(right-left)/2;
           if(a[mid]==x)
           return mid;
           else if(a[mid]>x)
           {
              right=mid-1; 
           }
           else if(a[mid]<x)
           {
               left=mid+1;
           }
       }
   }
   
    int findExtra(int a[], int b[], int n) {
        int x=0;
        for(int i=0;i<n-1;i++)
        {
            x=x^b[i];
        }
         
         for(int i=0;i<n;i++)
         x=x^a[i];
         
         int pos=binary(a,x,n);
         return pos;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int a[n], b[n - 1];
        for (int i = 0; i < n; i++) {
            cin >> a[i];
        }
        for (int i = 0; i < n - 1; i++) {
            cin >> b[i];
        }
        Solution obj;
        cout << obj.findExtra(a, b, n) << endl;
    }
}  // } Driver Code Ends
