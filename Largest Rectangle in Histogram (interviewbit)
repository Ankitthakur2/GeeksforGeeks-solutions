int Solution::largestRectangleArea(vector<int> &A) {
    int n=A.size();
     if(n==1)
      return A[0];
    vector<int> v1(n,-1); //left
    
    vector<int> v2(n,n); // right
    stack<int> s;
    for(int i=0;i<n;i++)
    {
        while(s.size()>0 && A[s.top()]>=A[i])
               s.pop();
               
               if(!s.empty())
               {
                   v1[i]=s.top();
                   
               }
        
        s.push(i);
    }
    
    while(!s.empty())
         s.pop();
     for(int i=n-1;i>=0;i--)
    {
        while(s.size()>0 && A[s.top()]>=A[i])
               s.pop();
               
               if(!s.empty())
               {
                   v2[i]=s.top();
                   
               }
        
        s.push(i);
    }
    
    int area=INT_MIN;
    
    for(int i=0;i<n;i++)
    {
       area= max(area,((abs(v1[i]-v2[i])-1)*A[i]) );
        
        
    }
    
    
    return area;
    
}


/*

[ 1 ]

There are 1 lines in the input

Line 1 ( Corresponds to arg 1 ) : An integer array. First number is the size S of the array. Then S numbers follow which indicate the elements in the array.
    For example, Array: [1, 2, 6] will be written as "3 1 2 6"(without quotes).

Your function returned the following output:
-2147483648

// [ 47, 69, 67, 97, 86, 34, 98, 16, 65, 95, 66, 69, 18, 1, 99, 56, 35, 9, 48, 72, 49, 47, 1, 72, 87, 52, 13, 23, 95, 55, 21, 92, 36, 88, 48, 39, 84, 16, 15, 65, 7, 58, 2, 21, 54, 2, 71, 92, 96, 100, 28, 31, 24, 10, 94, 5, 81, 80, 43, 35, 67, 33, 39, 81, 69, 12, 66, 87, 86, 11, 49, 94, 38, 44, 72, 44, 18, 97, 23, 11, 30, 72, 51, 61, 56, 41, 30, 71, 12, 44, 81, 43, 43, 27 ]
[2,1,5,6,2,3]
 0,1,2,3,4,5
 right
 2-->1 1    (v[i]*abs(v1[i]-v2[i]-1) )
 1-->n  n
 5-->2  4
 6-->2  4
 2-->n   n
 3-->n   n
 left
 2-->-1 -1
 1-->-1  -1
 5-->1  1
 6-->1   1
 2-->1   1
 3-->2   4
 
 

*/
