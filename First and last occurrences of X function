Given a sorted array having N elements, find the indices of the first and last occurrences of an element X in the given array.

Note: If the number X is not found in the array, return '-1' as an array.

Example 1:

Input:
N = 2 , X = 3
arr[] = { 1, 3, 3, 4 }
Output:
1 2
Explanation:
For the above array, first occurence
of X = 3 is at index = 1 and last
occurence is at index = 2.
Example 2:

Input:
N = 4, X = 5
arr[] = { 1, 2, 3, 4 }
Output:
-1
Explanation: 
As 5 is not present in the array,
so the answer is -1.
Your Task:
You dont need to read input or print anything. Complete the function firstAndLast() that takes the array arr, its size N and the value X as input parameters and returns a list of integers containing the indices of first and last occurence of X.

Expected Time Complexity: O(log(N))
Expected Auxiliary Space: O(1)

Constraints: 
1 <= N <= 10^5 

0 <= arr[i], X <= 10^9

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends



int searchlow(vector<int> &arr,int mid, int n, int x)
{
   while(arr[mid]==x)
   {
       mid--;
   }
   
    return mid+1;
}

int searchhigh(vector<int> &arr,int mid, int n, int x)
{
    while(arr[mid]==x)
    {
        mid++;
    }
    
 return mid-1;   
}

class Solution {
  public:
    vector<int> firstAndLast(vector<int> &arr, int n, int x) {
    
    
    int l=0;
    int r=n-1;
    int ele1,ele2;
    vector<int> v;
    while(l<=r)
    {
        int mid=l+(r-l)/2;
        if(arr[mid]==x)
        {
            ele1=searchlow(arr,mid,n,x);
            
            ele2=searchhigh(arr,mid,n,x);
            
            
            v.push_back(ele1);
            v.push_back(ele2);
            
            return v;
        }
        
        else if(arr[mid]<x)
        {
            l=mid+1;
        }
        
        else if(arr[mid]>x)
        {
           r=mid-1; 
        }
        
        
        
    }
    v.push_back(-1);
    return v;
    }
};

// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, x;
        cin >> n >> x;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }

        Solution obj;
        vector<int> ans= obj.firstAndLast(arr, n, x) ;
        for(int i:ans){
            cout<<i<<" ";
        }
        cout<< endl;
    }
    return 0;
}
  // } Driver Code Ends
